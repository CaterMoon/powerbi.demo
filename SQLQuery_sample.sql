/****** Object:  StoredProcedure [dbo].[ETL_1100_1_FACT_1100_AOPR]    Script Date: 2024-01-10 ¿ÀÈÄ 1:33:45 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/*
ETL_1100_1_FACT_1100_AOPR.SQL
*/
CREATE   PROC [dbo].[ETL_1100_1_FACT_1100_AOPR](@P_REPLACE BIT = 0)
AS
BEGIN
    BEGIN TRY
	    --------------------------------------------------------------
	    DECLARE @CUR_DATE DATETIME2 = DATEADD(HOUR, 9, SYSDATETIME());
		DECLARE @L_ETL_SP VARCHAR(50) = OBJECT_NAME(@@PROCID);
		DECLARE @L_ROWCOUNT INT = 0;	
		--------------------------------------------------------------
		IF @P_REPLACE = 1
		    IF EXISTS(SELECT 1 FROM SYS.TABLES WHERE NAME = 'FACT_1100_AOPR')
			    TRUNCATE TABLE FACT_1100_AOPR;
				
		
		--DIM: OCRD, OSLP, OOSR, OOIR, OOFR, OUSR, OOND, OHEM--
		------------------
		--DIM_0100_OCRD
		------------------
		MERGE INTO DIM_0100_OCRD AS AA
		USING(
			SELECT DISTINCT CARDCODE FROM ODS_1100_AOPR AS B WHERE CARDCODE IS NOT NULL
		) AS BB
		ON AA.CARDCODE = BB.CARDCODE
		WHEN NOT MATCHED THEN
		INSERT (CARDCODE, CARDNAME, CARDTYPE, GROUPCODE, CMPPRIVATE, ADDRESS, ZIPCODE, MAILADDRES, MAILZIPCOD, PHONE1, PHONE2, FAX, CNTCTPRSN, NOTES, BALANCE, CHECKSBAL, DNOTESBAL, ORDERSBAL, GROUPNUM, CREDITLINE, DEBTLINE, DISCOUNT, VATSTATUS, LICTRADNUM, DDCTSTATUS, DDCTPRCNT, VALIDUNTIL, CHRCTRSTCS, EXMATCHNUM, INMATCHNUM, LISTNUM, DNOTEBALFC, ORDERBALFC, DNOTEBALSY, ORDERBALSY, TRANSFERED, BALTRNSFRD, INTRSTRATE, COMMISSION, COMMGRCODE, FREE_TEXT, SLPCODE, PREVYEARAC, CURRENCY, RATEDIFACT, BALANCESYS, BALANCEFC, PROTECTED, CELLULAR, AVRAGELATE, CITY, COUNTY, COUNTRY, MAILCITY, MAILCOUNTY, MAILCOUNTR, E_MAIL, PICTURE, DFLACCOUNT, DFLBRANCH, BANKCODE, ADDID, PAGER, FATHERCARD, CARDFNAME, FATHERTYPE, QRYGROUP1, QRYGROUP2, QRYGROUP3, QRYGROUP4, QRYGROUP5, QRYGROUP6, QRYGROUP7, QRYGROUP8, QRYGROUP9, QRYGROUP10, QRYGROUP11, QRYGROUP12, QRYGROUP13, QRYGROUP14, QRYGROUP15, QRYGROUP16, QRYGROUP17, QRYGROUP18, QRYGROUP19, QRYGROUP20, QRYGROUP21, QRYGROUP22, QRYGROUP23, QRYGROUP24, QRYGROUP25, QRYGROUP26, QRYGROUP27, QRYGROUP28, QRYGROUP29, QRYGROUP30, QRYGROUP31, QRYGROUP32, QRYGROUP33, QRYGROUP34, QRYGROUP35, QRYGROUP36, QRYGROUP37, QRYGROUP38, QRYGROUP39, QRYGROUP40, QRYGROUP41, QRYGROUP42, QRYGROUP43, QRYGROUP44, QRYGROUP45, QRYGROUP46, QRYGROUP47, QRYGROUP48, QRYGROUP49, QRYGROUP50, QRYGROUP51, QRYGROUP52, QRYGROUP53, QRYGROUP54, QRYGROUP55, QRYGROUP56, QRYGROUP57, QRYGROUP58, QRYGROUP59, QRYGROUP60, QRYGROUP61, QRYGROUP62, QRYGROUP63, QRYGROUP64, DDCTOFFICE, CREATEDATE, UPDATEDATE, EXPORTCODE, DSCNTOBJCT, DSCNTREL, SPGCOUNTER, SPPCOUNTER, DDCTFILENO, SCNCOUNTER, MININTRST, DATASOURCE, OPRCOUNT, EXEMPTNO, PRIORITY, CREDITCARD, CRCARDNUM, CARDVALID, USERSIGN, LOCMTH, VALIDFOR, VALIDFROM, VALIDTO, FROZENFOR, FROZENFROM, FROZENTO, SEMPLOYED, MTHCOUNTER, BNKCOUNTER, DDGKEY, DDTKEY, VALIDCOMM, FROZENCOMM, CHAINSTORE, DISCINRET, STATE1, STATE2, VATGROUP, LOGINSTANC, OBJTYPE, INDICATOR, SHIPTYPE, DEBPAYACCT, SHIPTODEF, BLOCK, MAILBLOCK, PASSWORD, ECVATGROUP, DELETED, IBAN, DOCENTRY, FORMCODE, BOX1099, PYMCODE, BACKORDER, PARTDELIVR, DUNNLEVEL, DUNNDATE, BLOCKDUNN, BANKCOUNTR, COLLECAUTH, DME, INSTRUCKEY, SINGLEPAYM, ISRBILLID, PAYMBLOCK, REFDETAILS, HOUSEBANK, OWNERIDNUM, PYBLCKDESC, HOUSBNKCRY, HOUSBNKACT, HOUSBNKBRN, PROJECTCOD, SYSMATCHNO, VATIDUNCMP, AGENTCODE, TOLRNCDAYS, SELFINVOIC, DEFERRTAX, LETTERNUM, MAXAMOUNT, FROMDATE, TODATE, WTLIABLE, CRTFCATENO, EXPIREDATE, NINUM, ACCCRITRIA, WTCODE, EQU, HLDCODE, CONNBP, MLTMTHNUM, TYPWTREPRT, VATREGNUM, REPNAME, INDUSTRY, BUSINESS, WTTAXCAT, ISDOMESTIC, ISRESIDENT, AUTOCALBCG, OTRCTLACCT, ALIASNAME, BUILDING, MAILBUILDI, BOEPRSNT, BOEDISCNT, BOEONCLCT, UNPAIDBOE, ITWTCODE, DUNTERM, CHANNLBP, DFTCNICIAN, TERRITORY, BILLTODEF, DPMCLEAR, INTRNTSITE, LANGCODE, HOUSACTKEY, PROFESSION, CDPNUM, DFLBANKKEY, BCACODE, USESHPDGD, REGNUM, VERIFNUM, BANKCTLKEY, HOUSCTLKEY, ADDRTYPE, INSUROP347, MAILADDRTY, STREETNO, MAILSTRNO, TAXRNDRULE, VENDTID, THRESHOVER, SUROVER, VENDOROCUP, OPCODE347, DPMINTACT, RESIDENNUM, USERSIGN2, PLNGGROUP, VATIDNUM, AFFILIATE, MIVZEXPSTS, HIERCHDDCT, CERTWHT, CERTBKEEP, WHSHAAMGRP, INDUSTRYC, DATEVACCT, DATEVFIRST, GTSREGNUM, GTSBANKACT, GTSBILADDR, HSBNKSWIFT, HSBNKIBAN, DFLSWIFT, AUTOPOST, INTRACC, FEEACC, CPNNO, NTSWEBSITE, DFLIBAN, SERIES, NUMBER, EDOCEXPFRM, TAXIDIDENT, ATTACHMENT, ATCENTRY, DISCREL, NODISCOUNT, SCADJUST, DFLAGRMNT, GLBLLOCNUM, SENDERID, RCPNTID, MAINUSAGE, SEFAZCHECK, FREE312, FREE313, DATEFROM, DATETILL, RELCODE, OKATO, OKTMO, KBKCODE, TYPEOFOP, OWNERCODE, MANDATEID, SIGNDATE, REMARK1, CONCERTI, TPCUSPRES, ROLETYPCOD, BLOCKCOMM, EMPLYMNTCT, EXCPTNLEVT, EXPNPRFFND, EDRSFROMBP, EDRSTOBP, CREATETS, UPDATETS, EDOCGENTYP, ESTREET, ESTREETNUM, EBUILDNNUM, EZIPCODE, ECITYTOWN, ECOUNTRY, EDISTRICT, REPFNAME, REPSNAME, REPCMPNAME, REPFISCODE, REPADDID, PECADDR, IPACODEPA, PRICEMODE, EFFECPRICE, TXEXMXVDTP, MERCHANTID, USEBILADDR, NATURALPER, DPPSTATUS, ENADDID, ENCRYPTIV, ENDFLACCNT, ENDFLIBAN, ENERD4IN, ENERD4OUT, DFLCUSTOMR, TSPENTRY, TSPLINE, FCERELEVNT, FCEVLDTE, AGGREGDOC, EFFCALLSRC, EBVATEXCAU, DATAVERS, U_ZEDS_RODOCNUM, U_ZEDS_ROTYPE, U_ZED_EXTSYNCHKEY, U_ZED_EXTCUSTID, U_SWK_LEADSOURCE, U_SWK_CUSTNOTEQUOTE, U_SWK_CUSTNOTEORDER, U_SWK_CUSTNOTEPICKLIST, U_SWK_CUSTNOTEPACKLIST, U_SWK_CUSTNOTEINVOICE, U_SWK_AREACODE, U_SWK_WAREHOUSE, U_SWK_MAINCUSTOMER	,U_SWK_TRADECODE	,U_SWK_ALLIANCECODE	,U_SWK_KEYACCOUNTCODE	,U_SWK_TELEPHONEDELIVERY	,U_SWK_FAXNUMBERDELIVERY	,U_SWK_TARGETUNIT	,U_SWK_TARGETUP	,U_SWK_TARGETDOWN	,U_SWK_SALESAGENTPRIMARYFLAG	,U_SWK_WHOTO	,U_SWK_REGIONALBRANCH	,U_SWK_ADVERTISINGAREA	,U_SWK_CONTAINERNUMBER	,U_SWK_TELEPHONE	,U_SWK_FAXNUMBER	,U_SWK_EDIADDRESSNO	,U_SWK_DEPARTMENT	,U_SWK_DELIVERYTERMS	,U_SWK_BPTYPE	,U_SWK_EARLYSHIPDAYS	,U_SWK_LATESHIPDAYS	,U_SWK_SWKPROJECTCODE	,U_SWK_CUSTPROJECTCODE	,U_SWK_SALESREP1	,U_SWK_SALESREP2	,U_SWK_SALESREP3	,U_SWK_SALESREP4	,U_SWK_SALESREP5	,U_SWK_SALESREP6	,U_SWK_SALESREP7	,U_SWK_SALESREP8	,U_SWK_SALESREPPCT1	,U_SWK_SALESREPPCT2	,U_SWK_SALESREPPCT3	,U_SWK_SALESREPPCT4	,U_SWK_SALESREPPCT5	,U_SWK_SALESREPPCT6	,U_SWK_SALESREPPCT7	,U_SWK_SALESREPPCT8	,U_SWK_SWKKEYACCOUNTCODE	,U_SWK_DEFAULTACCOUNT	,U_SWK_BTRESPONSETYPE	,U_V33_SHPCOMRES	,U_V33_REQINSURANCE	,U_MAINCODE	,U_MAINNAME	,U_ETCPRTYN	,U_JONGNUM	,U_TAXSUMTP	,U_RRNYN	,U_RRN	,U_CARDTP	,U_CARDTPNM	,U_VATBP	,U_VATBPNM	,U_SWK_INDUSTRYC	,U_SEO_BPORGANICGRW	,U_SEO_BPGROWINIT	,CREATE_DATE)
		VALUES (BB.CARDCODE ,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	,NULL	, @CUR_DATE )
		;

		------------------
		--DIM_0106_OSLP
		------------------
		MERGE INTO DIM_0106_OSLP AS AA
		USING(
			SELECT DISTINCT SLPCODE FROM ODS_1100_AOPR AS B WHERE SLPCODE IS NOT NULL
		) AS BB
		ON AA.SLPCODE_KEY = BB.SLPCODE
		WHEN NOT MATCHED THEN
		INSERT (SLPCODE_KEY, SLPNAME, MEMO, COMMISSION, GROUPCODE, LOCKED, DATASOURCE, USERSIGN, EMPID, ACTIVE, TELEPHONE, MOBIL, FAX, EMAIL, DPPSTATUS, ENCRYPTIV, U_SWK_USERCODE, CREATE_DATE)
		VALUES (BB.SLPCODE ,NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, @CUR_DATE)
		;

		------------------
		--DIM_0105_OOSR
		------------------
		MERGE INTO DIM_0105_OOSR AS AA
		USING(
			SELECT DISTINCT SOURCE FROM ODS_1100_AOPR AS B WHERE SOURCE IS NOT NULL
		) AS BB
		ON AA.NUM_KEY = BB.SOURCE
		WHEN NOT MATCHED THEN
		INSERT (NUM_KEY, DESCRIPT, SORTORDER, USERSIGN, CREATE_DATE)
		VALUES (BB.SOURCE , NULL, NULL, NULL, @CUR_DATE)
		;

		------------------
		--DIM_0104_OOIR
		------------------
		MERGE INTO DIM_0104_OOIR AS AA
		USING(
			SELECT DISTINCT INTRATE FROM ODS_1100_AOPR AS B WHERE INTRATE IS NOT NULL
		) AS BB
		ON AA.NUM_KEY = BB.INTRATE
		WHEN NOT MATCHED THEN
		INSERT (NUM_KEY, DESCRIPT, SORTORDER, USERSIGN, CREATE_DATE)
		VALUES (BB.INTRATE , NULL, NULL, NULL, @CUR_DATE)
		;

		------------------
		--DIM_0118_OOFR
		------------------
		MERGE INTO DIM_0118_OOFR AS AA
		USING(
			SELECT DISTINCT REASON FROM ODS_1100_AOPR AS B WHERE REASON IS NOT NULL
		) AS BB
		ON AA.NUM_KEY = BB.REASON
		WHEN NOT MATCHED THEN
		INSERT (NUM_KEY, DESCRIPT, SORTORDER, USERSIGN, CREATE_DATE)
		VALUES (BB.REASON, NULL, NULL, NULL, @CUR_DATE)
		;

		------------------
		--DIM_0203_OUSR
		------------------
		MERGE INTO DIM_0203_OUSR AS AA
		USING(
			SELECT DISTINCT USERSIGN FROM ODS_1100_AOPR AS B WHERE USERSIGN IS NOT NULL
		) AS BB
		ON AA.USERID_KEY = BB.USERSIGN
		WHEN NOT MATCHED THEN
		INSERT (USERID_KEY, PASSWORD, PASSWORD1, PASSWORD2, INTERNAL_K, USER_CODE, U_NAME, GROUPS, PASSWORD4, ALLOWENCES, SUPERUSER, DISCOUNT,
				PASSWORD3, INFO1FILE, INFO1FIELD, INFO2FILE, INFO2FIELD, INFO3FILE, INFO3FIELD, INFO4FILE, INFO4FIELD, DTYPE, E_MAIL, PORTNUM, OUTOFOFFIC,
				SENDEMAIL, SENDSMS, DFLTSGROUP, CASHLIMIT, MAXCASHSUM, FAX, SENDFAX, LOCKED, DEPARTMENT, BRANCH, USERPREFS, LANGUAGE, CHARSET, OPENCDT, CDTPRVDAYS,
				DSPLYRATES, AUIMPRATES, OPENDPS, RCRFLAG, CHECKFILES, OPENCREDIT, CREDITDAY1, CREDITDAY2, WALLPAPER, WLLPPRDSP, ADVIMAGEPR, CONTACTLOG, LASTWARNED,
				ALERTPOLFR, SCREENLOCK, SHOWNEWMSG, PICTURE, POSITION, ADDRESS, COUNTRY, TEL1, TEL2, GENDER, BIRTHDAY, ENBMENUFLT, OBJTYPE, LOGINSTANC, USERSIGN,
				CREATEDATE, USERSIGN2, UPDATEDATE, ONELOGPWD, LASTLOGIN, LASTPWDS, LASTPWDS2, LASTPWDSET, FAILEDLOG, PWDNEVEREX, SALESDISC, PURCHDISC, LSTLOGOUTD,
				LSTLOGINT, LSTLOGOUTT, LSTPWDCHT, LSTPWDCHB, RCLFLAG, MOBILEUSER, MOBILEIMEI, PRSWKCNTEB, SNAPSHOTID, STDATA, SUPPORTUSR, NOSTPWDNUM, DOMAINUSER,
				CUSAGREE, EMAILSIG, TPLID, DIGCRTPATH, SHOWNEWTSK, INTGRTEB, ALLBRNCHF, EVTNOTIFY, IGNDTOWN, ENTERASTAB, DOTASSEP, MOUSEONLY, COLOR, SKINTYPE, FONT,
				FONTSIZE, NATURALPER, DPPSTATUS, AUTOASNBPL, ENCRYPTIV, HANDLEEDOC, U_SWK_ACCOUNTS, U_GWID, U_BOY_B1UP_RCS, CREATE_DATE)
		VALUES (BB.USERSIGN, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
				NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
				NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
				NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
				NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, @CUR_DATE)
		;

		------------------
		--DIM_0113_OOND
		------------------
		MERGE INTO DIM_0113_OOND AS AA
		USING(
			SELECT DISTINCT INDUSTRY FROM ODS_1100_AOPR AS B WHERE INDUSTRY IS NOT NULL
		) AS BB
		ON AA.INDCODE_KEY = BB.INDUSTRY
		WHEN NOT MATCHED THEN
		INSERT (INDCODE_KEY, INDNAME, INDDESC, U_SWK_INDUSTRYMARKUP, CREATE_DATE)
		VALUES (BB.INDUSTRY, NULL, NULL, NULL, @CUR_DATE)
		;

		------------------
		--DIM_0102_OHEM
		------------------
		MERGE INTO DIM_0102_OHEM AS AA
		USING(
			SELECT DISTINCT OWNER FROM ODS_1100_AOPR AS B WHERE OWNER IS NOT NULL
		) AS BB
		ON AA.EMPID_KEY = BB.OWNER
		WHEN NOT MATCHED THEN
		INSERT (EMPID_KEY, LASTNAME, FIRSTNAME, MIDDLENAME, SEX, JOBTITLE, TYPE, DEPT, BRANCH, WORKSTREET, WORKBLOCK, WORKZIP, WORKCITY, WORKCOUNTY, WORKCOUNTR, WORKSTATE,
				MANAGER, USERID, SALESPRSON, OFFICETEL, OFFICEEXT, MOBILE, PAGER, HOMETEL, FAX, EMAIL, STARTDATE, STATUS, SALARY, SALARYUNIT, EMPLCOST, EMPCOSTUNT, TERMDATE,
				TERMREASON, BANKCODE, BANKBRANCH, BANKBRANNO, BANKACOUNT, HOMESTREET, HOMEBLOCK, HOMEZIP, HOMECITY, HOMECOUNTY, HOMECOUNTR, HOMESTATE, BIRTHDATE, BRTHCOUNTR,
				MARTSTATUS, NCHILDREN, GOVID, CITIZENSHP, PASSPORTNO, PASSPORTEX, PICTURE, REMARK, ATTACHMENT, SALARYCURR, EMPCOSTCUR, WORKBUILD, HOMEBUILD, POSITION, ATCENTRY,
				ADDRTYPEW, ADDRTYPEH, STREETNOW, STREETNOH, DISPMIDNAM, NAMEPOS, DISPCOMMA, COSTCENTER, COMPANYNUM, VACPREYEAR, VACCURYEAR, MUNKEY, TAXCLASS, INTAXLIABI,
				EMTAXCCODE, RELPARTNER, EXEMPTAMNT, EXEMPTUNIT, ADDIAMNT, ADDIUNIT, TAXONAME, TAXONUM, HEAINSNAME, HEAINSCODE, HEAINSTYPE, SINSURNUM, STATUSOFP, STATUSOFE,
				BCODEDATEV, DEVBAOWNER, FNAMESP, SURNAMESP, LOGINSTANC, USERSIGN, USERSIGN2, UPDATEDATE, PERSGROUP, JTCODE, EXTEMPNO, BIRTHPLACE, PYMMETH, EXEMPTCURR, ADDICURR,
				STDCODE, FATHERNAME, CPF, CRC, CONTRESP, REPLEGAL, DIRFDECLAR, UF_CRC, IDTYPE, ACTIVE, BPLID, MANUALNUM, PASSISSUE, PASSISSUER, QUALCODE, PRWEBACCSS, PREPRWEB,
				BPLINK, NATURALPER, DPPSTATUS, ENRLIGION, ENRLIGIONP, ENCRYPTIV, ENGOVID, ENPASSPORT, CREATEDATE, CREATETS, UPDATETS, ENINSURNUM, ENBNKACCT, CODE, U_V33_TEMPPASSWORD,
				U_V33_PASSWORDHASH, U_V33_ISLOGINENABLED, U_V33_B1WEBROLES, U_V33_LINKEDOBJKEY, U_V33_ANSWER, U_V33_QUESTION, U_ZEDS_VENDORCODE, U_ZEDS_CIVENDORCODE,
				U_ZEDS_DFLTEXPCAT, U_ZEDS_ALLOWEXPUSER, U_ZEDS_CICCID, U_BOY_SBO_USER, U_BOY_SBO_PASS, U_BOY_SBO_ROLE, CREATE_DATE)
		VALUES (BB.OWNER, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
				NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
				NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
				NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
				NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
				NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, @CUR_DATE)
		;





		------------------
		--FACT_1100_AOPR --´©ÀûÀÌ¸é (@P_REPLACE BIT = 1)
		------------------
		MERGE INTO FACT_1100_AOPR AS AA
		USING(
			SELECT OPPRID AS OPPRID_KEY,
					ISNULL((SELECT CARD_KEY FROM DIM_0100_OCRD WHERE CARDCODE = B.CARDCODE),-999) AS CARD_KEY,
					CARDCODE,
					ISNULL(B.SLPCODE, -999) AS SLPCODE_KEY,
					CPRCODE,
					ISNULL(B.SOURCE, -999) AS SOURCE_NUM_KEY,
					INTCAT1,
					INTCAT2,
					INTCAT3,
					ISNULL(B.INTRATE, -999) AS INTRATE_NUM_KEY,
					OPENDATE,
					DIFTYPE,
					PREDDATE,
					MAXSUMLOC,
					MAXSUMSYS,
					WTSUMLOC,
					WTSUMSYS,
					PRCNPROF,
					SUMPROFL,
					SUMPROFS,
					MEMO,
					STATUS,
					STATUSREM,
					ISNULL(B.REASON,-999) AS REASON_NUM_KEY,
					REALSUMLOC,
					REALSUMSYS,
					REALPROFL,
					REALPROFS,
					CLOPRCNT,
					STEPLAST,
					ISNULL(B.USERSIGN,-999) AS USERID_KEY,
					TRANSFERED,
					INSTANCE,
					CARDNAME,
					CLOSEDATE,
					LASTSLP,
					NAME,
					TERRITORY,
					ISNULL(B.INDUSTRY,-999) AS INDCODE_KEY,
					CHNCRDCODE,
					CHNCRDNAME,
					PRJCODE,
					CARDGROUP,
					CHNCRDCON,
					ISNULL(B.OWNER,-999) AS EMPID_KEY,
					ATTACHMENT,
					DOCTYPE,
					DOCNUM,
					DOCENTRY,
					DOCCHKBOX,
					ATCENTRY,
					LOGINSTANC,
					USERSIGN2,
					UPDATEDATE,
					OPPRTYPE,
					UPDATETS,
					DPPSTATUS,
					CREATEDATE,
					ENCRYPTIV,
					U_U_SEO_OPPSALESHIS,
					U_SEO_OPPORDAMT,
					U_SEO_OPPINVAMT,
					U_SEO_OPPQTAMT,
					@CUR_DATE AS CREATE_DATE
			FROM ODS_1100_AOPR AS B
		) AS BB
		ON AA.OPPRID_KEY = BB.OPPRID_KEY AND AA.LOGINSTANC = BB.LOGINSTANC
		WHEN MATCHED THEN
			UPDATE SET
				AA.CARD_KEY = BB.CARD_KEY,
				AA.CARDCODE = BB.CARDCODE,
				AA.SLPCODE_KEY = BB.SLPCODE_KEY,
				AA.CPRCODE = BB.CPRCODE,
				AA.SOURCE_NUM_KEY = BB.SOURCE_NUM_KEY,
				AA.INTCAT1 = BB.INTCAT1,
				AA.INTCAT2 = BB.INTCAT2,
				AA.INTCAT3 = BB.INTCAT3,
				AA.INTRATE_NUM_KEY = BB.INTRATE_NUM_KEY,
				AA.OPENDATE = BB.OPENDATE,
				AA.DIFTYPE = BB.DIFTYPE,
				AA.PREDDATE = BB.PREDDATE,
				AA.MAXSUMLOC = BB.MAXSUMLOC,
				AA.MAXSUMSYS = BB.MAXSUMSYS,
				AA.WTSUMLOC = BB.WTSUMLOC,
				AA.WTSUMSYS = BB.WTSUMSYS,
				AA.PRCNPROF = BB.PRCNPROF,
				AA.SUMPROFL = BB.SUMPROFL,
				AA.SUMPROFS = BB.SUMPROFS,
				AA.MEMO = BB.MEMO,
				AA.STATUS = BB.STATUS,
				AA.STATUSREM = BB.STATUSREM,
				AA.REASON_NUM_KEY = BB.REASON_NUM_KEY,
				AA.REALSUMLOC = BB.REALSUMLOC,
				AA.REALSUMSYS = BB.REALSUMSYS,
				AA.REALPROFL = BB.REALPROFL,
				AA.REALPROFS = BB.REALPROFS,
				AA.CLOPRCNT = BB.CLOPRCNT,
				AA.STEPLAST = BB.STEPLAST,
				AA.USERID_KEY = BB.USERID_KEY,
				AA.TRANSFERED = BB.TRANSFERED,
				AA.INSTANCE = BB.INSTANCE,
				AA.CARDNAME = BB.CARDNAME,
				AA.CLOSEDATE = BB.CLOSEDATE,
				AA.LASTSLP = BB.LASTSLP,
				AA.NAME = BB.NAME,
				AA.TERRITORY = BB.TERRITORY,
				AA.INDCODE_KEY = BB.INDCODE_KEY,
				AA.CHNCRDCODE = BB.CHNCRDCODE,
				AA.CHNCRDNAME = BB.CHNCRDNAME,
				AA.PRJCODE = BB.PRJCODE,
				AA.CARDGROUP = BB.CARDGROUP,
				AA.CHNCRDCON = BB.CHNCRDCON,
				AA.EMPID_KEY = BB.EMPID_KEY,
				AA.ATTACHMENT = BB.ATTACHMENT,
				AA.DOCTYPE = BB.DOCTYPE,
				AA.DOCNUM = BB.DOCNUM,
				AA.DOCENTRY = BB.DOCENTRY,
				AA.DOCCHKBOX = BB.DOCCHKBOX,
				AA.ATCENTRY = BB.ATCENTRY,
				AA.USERSIGN2 = BB.USERSIGN2,
				AA.UPDATEDATE = BB.UPDATEDATE,
				AA.OPPRTYPE = BB.OPPRTYPE,
				AA.UPDATETS = BB.UPDATETS,
				AA.DPPSTATUS = BB.DPPSTATUS,
				AA.CREATEDATE = BB.CREATEDATE,
				AA.ENCRYPTIV = BB.ENCRYPTIV,
				AA.U_U_SEO_OPPSALESHIS = BB.U_U_SEO_OPPSALESHIS,
				AA.U_SEO_OPPORDAMT = BB.U_SEO_OPPORDAMT,
				AA.U_SEO_OPPINVAMT = BB.U_SEO_OPPINVAMT,
				AA.U_SEO_OPPQTAMT = BB.U_SEO_OPPQTAMT,
				AA.CREATE_DATE = BB.CREATE_DATE
		WHEN NOT MATCHED BY TARGET THEN
			INSERT (OPPRID_KEY, CARD_KEY, CARDCODE, SLPCODE_KEY, CPRCODE, SOURCE_NUM_KEY, INTCAT1, INTCAT2, INTCAT3, INTRATE_NUM_KEY, OPENDATE, DIFTYPE, PREDDATE, MAXSUMLOC, MAXSUMSYS, WTSUMLOC, WTSUMSYS, PRCNPROF, SUMPROFL, SUMPROFS, MEMO, STATUS, STATUSREM, REASON_NUM_KEY, REALSUMLOC, REALSUMSYS, REALPROFL, REALPROFS, CLOPRCNT, STEPLAST, USERID_KEY, TRANSFERED, INSTANCE, CARDNAME, CLOSEDATE, LASTSLP, NAME, TERRITORY, INDCODE_KEY, CHNCRDCODE, CHNCRDNAME, PRJCODE, CARDGROUP, CHNCRDCON, EMPID_KEY, ATTACHMENT, DOCTYPE, DOCNUM, DOCENTRY, DOCCHKBOX, ATCENTRY, LOGINSTANC, USERSIGN2, UPDATEDATE, OPPRTYPE, UPDATETS, DPPSTATUS, CREATEDATE, ENCRYPTIV, U_U_SEO_OPPSALESHIS, U_SEO_OPPORDAMT, U_SEO_OPPINVAMT, U_SEO_OPPQTAMT, CREATE_DATE)
			VALUES (BB.OPPRID_KEY, BB.CARD_KEY, BB.CARDCODE, BB.SLPCODE_KEY, BB.CPRCODE, BB.SOURCE_NUM_KEY, BB.INTCAT1, BB.INTCAT2, BB.INTCAT3, BB.INTRATE_NUM_KEY, BB.OPENDATE, BB.DIFTYPE, BB.PREDDATE, BB.MAXSUMLOC, BB.MAXSUMSYS, BB.WTSUMLOC, BB.WTSUMSYS, BB.PRCNPROF, BB.SUMPROFL, BB.SUMPROFS, BB.MEMO, BB.STATUS, BB.STATUSREM, BB.REASON_NUM_KEY, BB.REALSUMLOC, BB.REALSUMSYS, BB.REALPROFL, BB.REALPROFS, BB.CLOPRCNT, BB.STEPLAST, BB.USERID_KEY, BB.TRANSFERED, BB.INSTANCE, BB.CARDNAME, BB.CLOSEDATE, BB.LASTSLP, BB.NAME, BB.TERRITORY, BB.INDCODE_KEY, BB.CHNCRDCODE, BB.CHNCRDNAME, BB.PRJCODE, BB.CARDGROUP, BB.CHNCRDCON, BB.EMPID_KEY, BB.ATTACHMENT, BB.DOCTYPE, BB.DOCNUM, BB.DOCENTRY, BB.DOCCHKBOX, BB.ATCENTRY, BB.LOGINSTANC, BB.USERSIGN2, BB.UPDATEDATE, BB.OPPRTYPE, BB.UPDATETS, BB.DPPSTATUS, BB.CREATEDATE, BB.ENCRYPTIV, BB.U_U_SEO_OPPSALESHIS, BB.U_SEO_OPPORDAMT, BB.U_SEO_OPPINVAMT, BB.U_SEO_OPPQTAMT, BB.CREATE_DATE)
		WHEN NOT MATCHED BY SOURCE THEN
			DELETE
		OUTPUT $ACTION , INSERTED.*, DELETED.*
		;

		-----------------------------
		SET @L_ROWCOUNT = @@ROWCOUNT;		
		EXEC ETL_9999_1_FACT_9999_ETL_LOG @P_ETL_SP = @L_ETL_SP, @P_EFF_ROW = @L_ROWCOUNT;
		----------------------------------------------------------------------------------		
	END TRY
	BEGIN CATCH	
		INSERT INTO FACT_9999_ETL_LOG(ETL_DATE_TIME, ETL_SP_NAME, EFF_ROW_COUNT, ERR_MESSAGE, ERR_LINE, ERR_NUMBER) 
		VALUES(@CUR_DATE, @L_ETL_SP, @L_ROWCOUNT, ERROR_MESSAGE(), ERROR_LINE(), ERROR_NUMBER());
	END CATCH
END;
GO


